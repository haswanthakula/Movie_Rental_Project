{"version":3,"file":"static/js/278.fc29d88b.chunk.js","mappings":"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","sources":["components/Navbar.js","pages/user/Movies.js"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { useCart } from '../contexts/CartContext';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst Navbar = () => {\r\n  const { cartCount } = useCart();\r\n  const { user, logout } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    toast.success('Logged out successfully');\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <Nav>\r\n      <Logo>Movie Rental</Logo>\r\n      <NavLinks>\r\n        <NavLink to=\"/user/home\">Home</NavLink>\r\n        <NavLink to=\"/user/movies\">Movies</NavLink>\r\n        <NavLink to=\"/user/cart\">\r\n          Cart ({cartCount})\r\n        </NavLink>\r\n        <NavLink to=\"/user/orders\">Orders</NavLink>\r\n        <UserName>Welcome, {user?.name || 'User'}</UserName>\r\n        <LogoutButton onClick={handleLogout}>Logout</LogoutButton>\r\n      </NavLinks>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nconst Nav = styled.nav`\r\n  background: #141414;\r\n  padding: 1rem 2rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nconst Logo = styled.div`\r\n  color: #e50914;\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst NavLinks = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 2rem;\r\n`;\r\n\r\nconst NavLink = styled(Link)`\r\n  color: white;\r\n  text-decoration: none;\r\n  font-size: 1rem;\r\n  transition: color 0.3s ease;\r\n\r\n  &:hover {\r\n    color: #e50914;\r\n  }\r\n`;\r\n\r\nconst UserName = styled.span`\r\n  color: white;\r\n  margin-right: 1rem;\r\n`;\r\n\r\nconst LogoutButton = styled.button`\r\n  background: #e50914;\r\n  color: white;\r\n  border: none;\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n\r\n  &:hover {\r\n    background: #f40612;\r\n  }\r\n`;\r\n\r\nexport default Navbar;","import React, { useState, useEffect, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport Navbar from '../../components/Navbar';\r\nimport { useCart } from '../../contexts/CartContext';\r\nimport { toast } from 'react-toastify';\r\nimport { debounce } from 'lodash';\r\n\r\nconst Movies = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [debouncedSearchTerm, setDebouncedSearchTerm] = useState('');\r\n  const [selectedCategory, setSelectedCategory] = useState('all');\r\n  const [selectedRating, setSelectedRating] = useState('all');\r\n  const [selectedYear, setSelectedYear] = useState('all');\r\n  const { addToCart } = useCart();\r\n\r\n  useEffect(() => {\r\n    fetchMovies();\r\n  }, []);\r\n\r\n  const fetchMovies = async () => {\r\n    try {\r\n      const response = await fetch('https://movies-json-hiql.onrender.com/movies');\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch movies');\r\n      }\r\n      const data = await response.json();\r\n      setMovies(data);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError('Error loading movies');\r\n      console.error('Error:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Debounced search function\r\n  const debouncedSearch = useCallback(\r\n    debounce((searchValue) => {\r\n      setDebouncedSearchTerm(searchValue);\r\n    }, 500),\r\n    []\r\n  );\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchTerm(e.target.value);\r\n    debouncedSearch(e.target.value);\r\n  };\r\n\r\n  // Get unique categories from movies\r\n  const categories = ['all', ...new Set(movies.map(movie => movie.category))];\r\n  \r\n  // Get unique years from movies\r\n  const years = ['all', ...new Set(movies.map(movie => \r\n    new Date(movie.releaseDate).getFullYear()\r\n  ))].sort((a, b) => b - a);\r\n\r\n  // Rating options\r\n  const ratingOptions = [\r\n    { value: 'all', label: 'All Ratings' },\r\n    { value: '4.6', label: '4.6 & above' },\r\n    { value: '4.7', label: '4.7 & above' },\r\n    { value: '4.8', label: '4.8 & above' }\r\n  ];\r\n\r\n  const filteredMovies = movies.filter(movie => {\r\n    const matchesSearch = movie.title.toLowerCase().includes(debouncedSearchTerm.toLowerCase());\r\n    const matchesCategory = selectedCategory === 'all' || movie.category === selectedCategory;\r\n    const matchesRating = selectedRating === 'all' || movie.rating.rate >= parseFloat(selectedRating);\r\n    const matchesYear = selectedYear === 'all' || \r\n      new Date(movie.releaseDate).getFullYear() === parseInt(selectedYear);\r\n\r\n    return matchesSearch && matchesCategory && matchesRating && matchesYear;\r\n  });\r\n\r\n  const handleAddToCart = (movie) => {\r\n    addToCart(movie);\r\n    toast.success(`${movie.title} added to cart!`);\r\n  };\r\n\r\n  return (\r\n    <PageContainer>\r\n      <Navbar />\r\n      <MainContent>\r\n        <FilterSection>\r\n          <SearchBar\r\n            type=\"text\"\r\n            placeholder=\"Search movies...\"\r\n            value={searchTerm}\r\n            onChange={handleSearchChange}\r\n          />\r\n          <FilterGroup>\r\n            <Select \r\n              value={selectedCategory}\r\n              onChange={(e) => setSelectedCategory(e.target.value)}\r\n            >\r\n              <option value=\"all\">All Categories</option>\r\n              {categories.filter(cat => cat !== 'all').map(category => (\r\n                <option key={category} value={category}>\r\n                  {category.charAt(0).toUpperCase() + category.slice(1)}\r\n                </option>\r\n              ))}\r\n            </Select>\r\n\r\n            <Select\r\n              value={selectedRating}\r\n              onChange={(e) => setSelectedRating(e.target.value)}\r\n            >\r\n              {ratingOptions.map(option => (\r\n                <option key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </option>\r\n              ))}\r\n            </Select>\r\n\r\n            <Select\r\n              value={selectedYear}\r\n              onChange={(e) => setSelectedYear(e.target.value)}\r\n            >\r\n              <option value=\"all\">All Years</option>\r\n              {years.filter(year => year !== 'all').map(year => (\r\n                <option key={year} value={year}>{year}</option>\r\n              ))}\r\n            </Select>\r\n          </FilterGroup>\r\n        </FilterSection>\r\n\r\n        {loading ? (\r\n          <LoadingMessage>Loading movies...</LoadingMessage>\r\n        ) : error ? (\r\n          <ErrorMessage>{error}</ErrorMessage>\r\n        ) : filteredMovies.length === 0 ? (\r\n          <NoMoviesFound>\r\n            <h3>No Movies Found</h3>\r\n            <p>Try adjusting your search criteria</p>\r\n          </NoMoviesFound>\r\n        ) : (\r\n          <MovieGrid>\r\n            {filteredMovies.map((movie) => (\r\n              <MovieCard key={movie.id}>\r\n                <MovieImage src={movie.image} alt={movie.title} />\r\n                <MovieInfo>\r\n                  <MovieTitle>{movie.title}</MovieTitle>\r\n                  <MovieDetails>\r\n                    <ReleaseDate>\r\n                      <Icon>📅</Icon> {new Date(movie.releaseDate).getFullYear()}\r\n                    </ReleaseDate>\r\n                    <Category>\r\n                      <Icon>🎬</Icon> {movie.category}\r\n                    </Category>\r\n                    <Rating>\r\n                      <Icon>⭐</Icon> {movie.rating.rate}\r\n                    </Rating>\r\n                  </MovieDetails>\r\n                  <MoviePrice>${movie.price}</MoviePrice>\r\n                  <AddToCartButton onClick={() => handleAddToCart(movie)}>\r\n                    Add to Cart\r\n                  </AddToCartButton>\r\n                </MovieInfo>\r\n              </MovieCard>\r\n            ))}\r\n          </MovieGrid>\r\n        )}\r\n      </MainContent>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\n// Styled Components\r\nconst PageContainer = styled.div`\r\n  min-height: 100vh;\r\n  background-color: #f5f5f5;\r\n`;\r\n\r\nconst MainContent = styled.div`\r\n  padding: 2rem;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst FilterSection = styled.div`\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nconst SearchBar = styled.input`\r\n  width: 100%;\r\n  padding: 0.8rem;\r\n  margin-bottom: 1rem;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    border-color: #e50914;\r\n  }\r\n`;\r\n\r\nconst FilterGroup = styled.div`\r\n  display: flex;\r\n  gap: 1rem;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst Select = styled.select`\r\n  padding: 0.8rem;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  min-width: 150px;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    border-color: #e50914;\r\n  }\r\n`;\r\n\r\nconst MovieGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n  gap: 2rem;\r\n`;\r\n\r\nconst MovieCard = styled.div`\r\n  background: white;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n  transition: transform 0.2s;\r\n\r\n  &:hover {\r\n    transform: translateY(-5px);\r\n  }\r\n`;\r\n\r\nconst MovieImage = styled.img`\r\n  width: 100%;\r\n  height: 350px;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst MovieInfo = styled.div`\r\n  padding: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n`;\r\n\r\nconst MovieTitle = styled.h3`\r\n  margin: 0;\r\n  font-size: 1.1rem;\r\n  color: #333;\r\n  height: 2.4em;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n`;\r\n\r\nconst MovieDetails = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 0.5rem 0;\r\n  font-size: 0.9rem;\r\n  color: #666;\r\n`;\r\n\r\nconst ReleaseDate = styled.span`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.3rem;\r\n`;\r\n\r\nconst Category = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.3rem;\r\n  color: #666;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.3rem;\r\n`;\r\n\r\nconst Icon = styled.span`\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst MoviePrice = styled.span`\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n  color: #e50914;\r\n`;\r\n\r\nconst AddToCartButton = styled.button`\r\n  width: 100%;\r\n  padding: 0.8rem;\r\n  background-color: #e50914;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n  transition: background-color 0.2s;\r\n\r\n  &:hover {\r\n    background-color: #f40612;\r\n  }\r\n`;\r\n\r\nconst LoadingMessage = styled.div`\r\n  text-align: center;\r\n  padding: 2rem;\r\n  color: #666;\r\n  font-size: 1.2rem;\r\n`;\r\n\r\nconst ErrorMessage = styled.div`\r\n  text-align: center;\r\n  padding: 2rem;\r\n  color: #e50914;\r\n  font-size: 1.2rem;\r\n`;\r\n\r\nconst NoMoviesFound = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 200px;\r\n  width: 100%;\r\n  color: #666;\r\n  text-align: center;\r\n  \r\n  h3 {\r\n    margin-bottom: 1rem;\r\n    font-size: 1.5rem;\r\n  }\r\n  \r\n  p {\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nexport default Movies;"],"names":["Nav","styled","nav","_templateObject","_taggedTemplateLiteral","Logo","div","_templateObject2","NavLinks","_templateObject3","NavLink","Link","_templateObject4","UserName","span","_templateObject5","LogoutButton","button","_templateObject6","Navbar","cartCount","useCart","user","logout","useAuth","navigate","useNavigate","_jsxs","children","_jsx","to","name","onClick","handleLogout","toast","success","PageContainer","MainContent","FilterSection","SearchBar","input","FilterGroup","Select","select","MovieGrid","_templateObject7","MovieCard","_templateObject8","MovieImage","img","_templateObject9","MovieInfo","_templateObject10","MovieTitle","h3","_templateObject11","MovieDetails","_templateObject12","ReleaseDate","_templateObject13","Category","_templateObject14","Rating","_templateObject15","Icon","_templateObject16","MoviePrice","_templateObject17","AddToCartButton","_templateObject18","LoadingMessage","_templateObject19","ErrorMessage","_templateObject20","NoMoviesFound","_templateObject21","Movies","movies","setMovies","useState","loading","setLoading","error","setError","searchTerm","setSearchTerm","debouncedSearchTerm","setDebouncedSearchTerm","selectedCategory","setSelectedCategory","selectedRating","setSelectedRating","selectedYear","setSelectedYear","addToCart","useEffect","fetchMovies","async","response","fetch","ok","Error","data","json","err","console","debouncedSearch","useCallback","debounce","searchValue","categories","Set","map","movie","category","years","Date","releaseDate","getFullYear","sort","a","b","filteredMovies","filter","matchesSearch","title","toLowerCase","includes","matchesCategory","matchesRating","rating","rate","parseFloat","matchesYear","parseInt","type","placeholder","value","onChange","e","target","cat","charAt","toUpperCase","slice","label","option","year","length","src","image","alt","price","concat","handleAddToCart","id"],"sourceRoot":""}